= content_for :head_content do
  %script{:type => 'text/javascript', :src => "#{request.protocol}ajax.googleapis.com/ajax/libs/jqueryui/1.8.1/jquery-ui.min.js"}
  = stylesheet_link_tag 'jquery-ui/jquery-ui'
  :javascript
    $(function(){
      $(".datepicker").datepicker({
        'defaultDate':'#{@soonest_journal_date.strftime("%m/%d/%y")}',
        'minDate':'#{@soonest_journal_date.strftime("%m/%d/%y")}',
        'maxDate':'#{Time.zone.now.to_datetime.strftime("%m/%d/%y")}'
      });
    });

= content_for :h1 do
  =h current_facility

= content_for :sidebar do
  = render :partial => 'admin/shared/sidenav_billing', :locals => { :sidenav_tab => 'journals' }

%h2= t('.head.h2')
%h3= t('.head.h3')
- if @pending_journal.nil?
  %p.notice= t('.notice.pending')
- else
  %p= t('.instruct.p1')
  %p= t('.instruct.p3')
  %p= t('.instruct.p3')

  = form_for([current_facility, @pending_journal]) do |f|
    = f.error_messages 
    %table
      %tr
        %th= t('.th.download')
        %th= t('.th.journaled')
        %th= t('.th.amount')
        %th
          %span.require= t('.th.reference')
        %th= t('.th.notes')
        %th
          %span.require= t('.th.status')
      %tr
        %td
          %ul
            %li=link_to 'XLS File', @pending_journal.file.url
            %li=link_to 'XML File', facility_journal_path(current_facility, @pending_journal, :format => 'xml')
        %td=h human_datetime(@pending_journal.created_at)
        %td=h number_to_currency(@pending_journal.amount)
        %td= f.text_field :reference
        %td= f.text_field :description
        %td
          = select_tag :journal_status, options_for_select([[' ', nil], ['Succeeded, no errors', 'succeeded'], ['Succeeded, with errors', 'succeeded_errors'], ['Failed', 'failed']])
          = submit_tag t('.journal.close'), :confirm => t('.journal.confirm')
%p
%hr
%p
%h3= t('.head.h3-2')
- if @order_details.empty?
  %p.notice= t('.notice.journaled')
- else
  %p= t('.instruct.p4')
  - disable = false
  - unless @pending_journal.nil?
    -disable = true
    %p.notice= t('.notice.close')
  = form_for(:journal, @journal, :path => facility_journals_path) do |f|
    = f.error_messages
    %table
      %tr.borderless
        %td{:colspan => 2}= disable ? '' : link_to('Select None', 'JavaScript:void(0);', :class => 'select_all')
        %td= f.label :journal_date
        %td= f.text_field :journal_date, :value => @soonest_journal_date.strftime("%m/%d/%Y"), :class => 'datepicker'
        %td.currency{:colspan => 2}= submit_tag "Create Journal", {:disabled => disable}
      %tr
        %th
        %th= t('.th.order')
        %th= t('.th.fulfilled')
        %th= t('.th.account')
        %th= t('.th.owner')
        %th.currency= t('.th.total')
      - @order_details.each do |od|
        - account = od.account
        %tr{:class => needs_reconcile_warning?(od) ? 'reconcile-warning' : ''}
          %td= check_box_tag "order_detail_ids[]", od.id, (action_name == 'create' && !@update_order_details.collect{|uod| uod.id}.include?(od.id) ? false : true), {:disabled => (disable || od.account.expired? || od.account.suspended?), :class => 'toggle'}
          %td
            %ul
              %li== #{link_to "##{od}", edit_facility_order_order_detail_path(current_facility, od.order_id, od)}: #{od.product}
              - unless od.note.blank?
                %li
                  %i= od.note
          %td= human_date od.fulfilled_at
          %td
            %ul
              %li= link_to account, facility_account_statement_path(current_facility, account, 'recent')
              - if od.account.suspended?
                %li
                  %i= t('.account.suspended')
              - if od.account.expired?
                %li
                  %i= t('.account.expired')
          %td=h account.owner_user.full_name
          %td.currency=h number_to_currency od.total
      %tr.borderless
        %td{:colspan => 4}
        %td.currency{:colspan => 2}= submit_tag "Create Journal", {:disabled => disable}

= render :partial => 'shared/reconcile_footnote'
