%p= t('product_accessories.pick_accessories.instruct')
= form_tag order_order_detail_accessories_path(@order, @order_detail), :remote => request.xhr?, 'data-type' => 'html', :id => 'accessory-form', :class => :pick_accessories_form do |f|
  %table
    - @order_details.each do |od|
      %tr{:class => ['accessory-row', "scaling-#{od.class.name.demodulize.underscore}"]}
        %td
          = check_box_tag "accessories[#{od.product.id}][enabled]", true, od.enabled?
          = "#{od.product.to_s} (#{t("product_accessories.type.#{od.scaling_type}")})"
        %td= text_field_tag "accessories[#{od.product.id}][quantity]", od.quantity, :size => 3, :disabled => !od.quantity_editable?, :class => od.quantity_as_time? ? 'timeinput' : '', data: { :always_disabled => !od.quantity_editable? }

      - if od.errors.any?
        %tr
          %td{:colspan => 2, :class => 'errors'}= od.errors.full_messages.join('<br/>').html_safe
    %tr
      %td= submit_tag 'Add Accessories', :class => 'btn'
      %td= submit_tag 'Cancel', :class => 'btn', :id => 'cancel-btn'
:javascript
  accessory_picker = new AccessoryPicker($('#accessory-form'));
