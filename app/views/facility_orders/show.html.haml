- content_for :h1 do
  = current_facility
%h2= "Order ##{@order.id}"

%dl
  %dt= OrderDetail.human_attribute_name(:ordered_at)
  %dd= human_datetime @order.ordered_at

  %dt= OrderDetail.human_attribute_name(:user)
  %dd= @order.user

  %dt= OrderDetail.human_attribute_name(:created_by_user)
  %dd= @order.created_by_user

%table.order-list.table.table-striped.table-hover#order-management
  %thead
    %tr
      %th
      %th= OrderDetail.human_attribute_name(:id)
      %th= Product.model_name.human
      %th= Reservation.human_attribute_name(:duration_mins)
      %th= Reservation.human_attribute_name(:actual_duration_mins)
      %th Cost
      %th Subsidy
      %th Total
  %tbody
    - @order_details.each do |od|
      - od.send(:extend, PriceDisplayment)
      %tr{:class => [od.parent_order_detail_id ? 'child' : 'parent', "status-#{od.order_status.root.name.underscore}"] }
        %td
          %span.label{:class => "status-#{od.order_status.root.name.underscore}"}= od.order_status
        %td.order-id
          = link_to od, manage_order_detail_path(od), :class => 'order-detail'
          = link_to "(old)", edit_facility_order_order_detail_path(current_facility, @order, od)
        %td.product
          = od.product
          = link_to "+ Add accessory", new_order_order_detail_accessory_path(@order, od), :class => ['has_accessories', 'persistent'] if od.add_accessories?
          = "<br/>#{od.reservation}".html_safe if od.reservation

        %td.timeinput= od.reservation.try(:duration_mins)
        - if od.reservation.try(:actual_duration_mins)
          %td.timeinput= od.reservation.actual_duration_mins
        - elsif od.quantity_as_time?
          %td.timeinput= od.quantity
        - else
          %td= od.quantity
        %td= od.wrapped_cost
        %td= od.wrapped_subsidy
        %td
          = od.wrapped_total
        %td
          - if od.cost_estimated?
            %span.label.label-warning Estimated
          = order_detail_badges(od)

#order-detail-modal.modal.hide.fade

